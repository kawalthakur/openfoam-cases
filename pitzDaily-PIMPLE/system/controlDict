/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.1;

deltaT          0.0001;

writeControl    timeStep;

writeInterval   100;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           5;

functions
{
    p_total
    {
        type            coded;
        libs            (utilityFunctionObjects);
        // Name of the IOobject to be created as Total Pressure 
        name            p_total;
        executeControl  timeStep;
        executeInterval 100;
        writeControl    timeStep;
        writeInterval   100;
        codeWrite
        #{
            const volVectorField& U = mesh().lookupObject<volVectorField>("U");
            const volScalarField& p = mesh().lookupObject<volScalarField>("p");  
            Info << "Creating a p_total IOobject\n";  
            volScalarField p_total
            (
                IOobject
                (
                    "p_total",
                    mesh().time().timeName(),
                    mesh(),
                    IOobject::MUST_READ,
                    IOobject::AUTO_WRITE
                ),
                p + 0.5*magSqr(U)
            );
            Info << "Writing the p_total to the timeName\n";
            p_total().write();
        #};

    }

}

// ************************************************************************* //
